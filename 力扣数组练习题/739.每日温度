class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int n = temperatures.length;
        int[] arr = new int[n];
        Stack<Integer> stack = new Stack<Integer>();
        for (int i = 0; i < n; i++) {
            int t = temperatures[i]; // 拿到当前i位置的温度
            // 如果栈不为空且栈顶的温度小于当前i下标的温度就出栈
            while (!stack.isEmpty() && t > temperatures[stack.peek()]) {
                int z = stack.pop();// z 是当前栈顶的温度下标 出栈
                 arr[z] = i - z; // 坐标的差值就是需要返回的值
            }
            // 无论是出栈后还是栈空，都需要入栈操作
            stack.push(i);
        }
        return arr;
    }
}
