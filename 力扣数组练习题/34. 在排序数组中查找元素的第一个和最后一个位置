class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] arr = new int[]{-1,-1};
        arr[0] = binarySearch(nums,target,true);
        arr[1] = binarySearch(nums,target,false);
        return arr;
    }
    /**
      type 为true找左边界 false找右边界
     */
    public int binarySearch(int[] nums,int target,boolean type) {
        int left = 0;
        int right = nums.length - 1;
        int mid = 0;
        int res = -1;
        while (left <= right) {
            mid = (left + right) / 2;
            if (target < nums[mid]) {
                right = mid -1;
            } else if (target > nums[mid]) {
                left = mid + 1;
            } else {
                // 此时说明找到了 target == nums[mid]  处理返回值res
                res = mid;
                // 开始需要找左边界还是右边界
                if (type) {
                    // 为真找左边界
                    right = mid - 1;
                } else {
                    // 为假找右边界
                    left = mid + 1;
  
                }
            }
        }
        return res;
    }
}
