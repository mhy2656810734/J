import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Locale;
import java.util.Scanner;

/**
 * @author 26568
 * 字符串相关知识点
 * @date 2022-06-04 10:58
 */
public class TextDemo {
    /*
       StringBuffer 和  StringBuilder 对一个对象进行拼接
       String StringBuffer 和  StringBuilder的区别
       1.String 的拼接会产生大量的临时对象，后二者不会
       2.String 的拼接会被优化成StringBuilder的append();
       3.后二者当中的一些方法String不具备，例如:逆置方法reverse
       4.String的内容不可以修改， 后二者可以修改
       5.String和StringBuilder一般用在单线程，StringBuffer用于多线程情况下
     */
    public static void main(String[] args) {
        StringBuffer stringBuffer = new StringBuffer();
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("123");
        System.out.println(stringBuilder);
        stringBuffer.append("abc");
        stringBuffer.append("123456");
        System.out.println(stringBuffer);
        stringBuffer.reverse();// 逆置方法
        System.out.println(stringBuffer);
    }
    public static String fun(String str) {
        String[] str1 = str.split(" ");
        String ret = "";// 空串
        for (String s:str1) {
            ret += s;
        }
        return ret;
    }
    /*
       字符串拼接
     */
    public static void main11(String[] args) {
        Scanner scan = new Scanner(System.in);
        while (scan.hasNext()) {
            String str = scan.nextLine();
            String ret = fun(str);
            System.out.println(ret);
        }
    }
    /*
      多次分割
     */
    public static void main10(String[] args) {
        String str = "name=zhangsan&age=18";
        String[] str1 = str.split("&");
        for (String s:str1) {
            String[] str2 = s.split("=");
            for (String s1:str2) {
                System.out.println(s1);
            }
        }
    }
    /*
       字符串拆分
     */
    public static void main9(String[] args) {
        String str = "abc bcd def";
        String str2 = "abc.bcd.def";
        String[] str3 = str.split(" ",2);// 后面的2是拆分成几组
        String[] str1 = str.split(" ");// 以空格拆分
        for (String s:str1) {
            System.out.println(s);
        }
        for (String s:str3) {
            System.out.println(s);
        }
        String[] str4 = str2.split("\\.");// . $ () | [ { ^ ? * +  拆分前面都需要加\\
        for (String s:str4) {
            System.out.println(s);
        }
    }
    /*
      字符串查找
     */
    public static void main8(String[] args) {
        String str = "abccba";
        System.out.println(str.contains("abd"));// false 判断包不包含子串abd
        int index = str.indexOf("cc");
        System.out.println(index);// 2  str中是否有cc 如果有，返回下标，没有返回-1
        int index1 = str.indexOf("cc",2);
        System.out.println(index1);//2  从2号位置开始查询str中是否有cc
        int index2 = str.lastIndexOf("cc"); // 从后面倒着向前找cc的下标
        System.out.println(index2);
        int index3 = str.lastIndexOf("cc",3);// 从倒数第3个位置开始查找cc
        System.out.println(index3);
        System.out.println(str.startsWith("ab"));// 判断是不是以ab开头
        System.out.println(str.startsWith("cc",2));// 判断2号位置开始是不是以cc开头
        System.out.println(str.endsWith("ba"));// 判断是不是以"ba"结尾
    }
    public static String fun(String str,int left,int right) {
        char[] val = str.toCharArray();
        while (left < right) {
            char ch =  val[left];
            val[left] = val[right];
            val[right] = ch;
            left++;
            right--;
        }
        return new String(val);
    }
    public static void main7(String[] args) {
        String str = "abcdef";
        String str1 = fun(str,0,str.length()-1);
        System.out.println(str1);
    }
    /*
       字符串相关操作
     */
    public static void main6(String[] args) {
        String str = "   abc   de   ";
        String str2 = "abcDeF";
        String str1 = str.trim();// 去掉两边的空格，但是中间不能去空格
        System.out.println(str1);
        String str3 = str2.toUpperCase();
        System.out.println(str3);// 字符串转大写 ABCDEF
        String str4= str2.toLowerCase();// 字符串转小写  abcdef
        System.out.println(str4);
        System.out.println(str2.isEmpty());// false  判断字符串是否为空
    }
    /*
       字符串截取 substring
     */
    public static void main5(String[] args) {
        String str = "abcdefg";
        String str1 = str.substring(2);// 从2号位置开始全部截取
        System.out.println(str1);// cdefg
        String str2 = str.substring(2,4);// 左闭右开：2 3
        System.out.println(str2);// cd
    }
    /*
     字符串替换 replace
     */
    public static void main4(String[] args) {
        String str = "abcbcabcbd";
        String str1 = str.replace('a','f');
        System.out.println(str1);// 将a全部替换成f
        String str2 = str.replace("ab","ef");
        System.out.println(str2);// 将ab全部替换成ef
        String str3 = str.replaceAll("ab","ef");
        System.out.println(str3);// 将ab全部替换成ef
        String str4 = str.replaceFirst("bc","MN");//将第一出现的bc替换成MN
        System.out.println(str4);
    }
    /*
       字符串比较
     */
    public static void main3(String[] args) {
        String str = "hello";
        String str1 = "Hello";
        System.out.println(str1.equals(str));// false  区分大小写
        System.out.println(str1.equalsIgnoreCase(str));// true 不区分大小写
        System.out.println(str1.compareTo(str));// 比较字符串大小
    }
    /*
      字符串和字节的关系
     */
    public static void main2(String[] args) {
        byte[] bytes = {'a','b','c','d','e'};
        String str = new String(bytes);
        System.out.println(str);// abcde
        String str1 = new String(bytes,1,3);
        System.out.println(str1);// bcd
        byte[] bytes1 = str1.getBytes();
        System.out.println(Arrays.toString(bytes1));
    }

    /*
    检验函数
     */
    public static boolean func(String str) {
        for(int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (ch < '0' || ch > '9') {
                return false;
            }
        }
        return true;
    }
    /*
        字符串和数组的关系
     */
    public static void main1(String[] args) {
        String str = "hello";
        char[] val = {'w','o','r','l','d'};
        String str1 = new String(val);// str1 = "world"
        String str2 = new String(val,1,4);// str2 = "orld"
        char ch = str.charAt(2);// ch = 'l'
        char[] val1 = str.toCharArray();
        System.out.println(val1);// val1 = "hello"
        String str3 = "1234a5";
        boolean flag = func(str3);
        System.out.println(flag);
    }
}
