/*
 public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}
*/
public class Solution {
    public ListNode deleteDuplication(ListNode pHead) {
        if (pHead == null) {
            return null;
        }
        ListNode newHead = new ListNode(-1);
        ListNode prev = newHead;
        newHead.next = pHead;
        ListNode cur = pHead;
        while (cur != null && cur.next != null) {
            // 判断是否相等
            if (cur.val == cur.next.val) {
                // 相等的话就都跳过
                int val = cur.val;
                while(cur != null && cur.val == val) {
                    cur = cur.next;
                    prev.next = cur;
                } 
            } else {
                // 如果不相等就进行拼接
                prev = cur;
                cur = cur.next;
            }
        }
        return newHead.next;
    }
}
