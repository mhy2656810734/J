/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public int[] reversePrint(ListNode head) {
        if (head == null) {
            return new int[0];
        }
        // // 先统计结点的个数
        // ListNode cur = head;
        // int count = 0;
        // while (cur != null) {
        //     count++;
        //     cur = cur.next;
        // }
        // int[] arr = new int[count];
        // // 正序遍历,倒着存数据
        // int right = count -1;
        // cur = head;
        // while (cur != null) {
        //     arr[right] = cur.val;
        //     cur = cur.next;
        //     right--;
        // }
        // return arr;
        // 压栈法
        Stack<Integer> stack = new Stack<>();
        ListNode cur = head;
        while (cur != null) {
            stack.push(cur.val);
            cur = cur.next;
        }
        // 倒着输出
        int[] arr = new int[stack.size()];
        int i = 0;
        while (stack.size() > 0) {
            arr[i++] = stack.pop();
        }
        return arr;
    }
}
