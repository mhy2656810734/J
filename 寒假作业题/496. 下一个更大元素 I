class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        // 单调栈:使用单调递增
        Deque<Integer> stack = new ArrayDeque<>();
        // 使用哈希表最后取数据
        Map<Integer,Integer> map = new HashMap<>();
        int[] arr = new int[nums1.length];
        // 逆序取值
        for (int i = nums2.length -1;i >= 0;i--) {
            int num = nums2[i];
            // 先判断栈是否为空 且 栈顶元素是否小于num
            while (!stack.isEmpty() && num >= stack.peek()) {
                // 弹出栈顶数据
                stack.pop();
            }
            map.put(num,stack.isEmpty()?-1:stack.peek());
            stack.push(num);
        }
        for (int i = 0; i < nums1.length;i++) {
            arr[i] = map.get(nums1[i]);
        }
        return arr;
    }
}
