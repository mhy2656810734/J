class MyQueue {
    Stack<Integer> stack1 = null;
    Stack<Integer> stack2 = null;
    public MyQueue() {
        stack1 = new Stack<>();
        stack2 = new Stack<>();
    }
    // 都放到queue1中
    public void push(int x) {
        stack1.push(x);
    }
    
    public int pop() {
        if (empty()) {
            return -1;
        }
        // 如果s2 不为空直接弹出
        if (stack2.empty()) {
            // 为空就将s1所有都放到s2中
            while (!stack1.empty()) {
                stack2.push(stack1.pop());
            }
        } 
        return stack2.pop();
    }
    
    public int peek() {
        if (empty()) {
            return -1;
        }
        // 如果s2 不为空直接弹出
        if (stack2.empty()) {
            // 为空就将s1所有都放到s2中
            while (!stack1.empty()) {
                stack2.push(stack1.pop());
            }
        } 
        return stack2.peek();
    }
    
    public boolean empty() {
        return stack1.empty() && stack2.empty();
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
