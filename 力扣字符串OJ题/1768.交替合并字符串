
// 实现思路：先将两个字符串转换成数组，然后再创建一个新数组，通过flag
// 标记顺序添加即可
class Solution {
    public String mergeAlternately(String word1, String word2) {
        int n = word1.length();
        int m = word2.length();
        char[] arr = new char[m+n];
        char[] arr1 = word1.toCharArray();
        char[] arr2 = word2.toCharArray();
        int i = 0;// 表示world1的下标
        int j = 0; //表示world2的下标
        int z = 0;// 表示arr的下标
        arr[z++] = arr1[i++];  
        int flag = 1;// 用来交替追加
        while ((i < n) && (j < m)) {
            if (flag == 1) {
                arr[z++] = arr2[j++];
                flag = -1;
            } else {
                arr[z++] = arr1[i++];
                flag = 1;
            }
        }
       while (i < n) {
           arr[z++] = arr1[i++];
       }
       while ( j < m) {
           arr[z++] = arr2[j++];
       }
       return new String(arr);
    }
}
